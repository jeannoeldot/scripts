#!/usr/bin/env bash
#
# Author: Jean-Noel Dot  <prenom nom @ fournisseur.fr> 2015,2016
# Version : 02

## POUR TEST
#set -x

# NOMS FICHIERS
NAME_MAKEPKG=makepkg.conf
NAME_MAKEPKG_PACNEW=makepkg.conf.pacnew
NAME_PACMAN=pacman.conf
NAME_PACMAN_PACNEW=pacman.conf.pacnew

# NOMS RÉPERTOIRES
NAME_DIR_REPOLOCAL=00-repolocal
# REPERTOIRES
DIR_CONF=/etc
## POUR TEST
# DIR_CONF="$HOME/01-scripts/Maj-pacman/0-Tests/"
## POUR TEST
##

# NOM UTILSATEUR
NAME_USER=${USER}

# COLORS
Bold=$(tput bold)
Underline=$(tput sgr 0 1)
Reset=$(tput sgr0)
# Regular Colors
Red=$(tput setaf 1)
Green=$(tput setaf 2)
Yellow=$(tput setaf 3)
Blue=$(tput setaf 4)
Purple=$(tput setaf 5)
Cyan=$(tput setaf 6)
White=$(tput setaf 7)
# Bold
BRed=${Bold}$(tput setaf 1)
BGreen=${Bold}$(tput setaf 2)
BYellow=${Bold}$(tput setaf 3)
BBlue=${Bold}$(tput setaf 4)
BPurple=${Bold}$(tput setaf 5)
BCyan=${Bold}$(tput setaf 6)
BWhite=${Bold}$(tput setaf 7)

#
# FONCTIONS
#
msg() {
  local mesg=$1; shift
  printf "${BWhite}:: ${mesg}${Reset}\n" "$@" >&2
}

msg_2() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Reset}\n" "$@" >&2
}

msg_titre() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Reset}\n" "$@" >&2
}

msg_newline() {
  local mesg=$1; shift
  printf "\n" "$@" >&2
}

error() {
  local mesg=$1; shift
  printf "${BRed}==> ERREUR:${BWhite} ${mesg}${Reset}\n" "$@" >&2
}

cleanup() {
  cd
  [[ $1 ]] && exit $1
}

die() {
  error "$*"
  cleanup 1
}

read_input_text() {
    printf '%s' "${BGreen}"
    read -p "$1 [O/N]: " OPTION
    msg_newline
    OPTION=$(echo "$OPTION" | tr '[:upper:]' '[:lower:]')
    printf '%s\n' "${Reset}"
}

# DANS VIRTUALBOX OU NON
check_is_in_virtualbox() {
    local vbox=$(journalctl -b | grep -E "DMI:")
    echo ${vbox} | tr "[:upper:]" "[:lower:]" | grep -q virtualbox
    if (( $? == 0 )); then
        IN_VIRTUAL_BOX=1
    else
        IN_VIRTUAL_BOX=0
    fi
}
#
# FIN FONCTIONS
#

#
# DEBUT DU SCRIPT
#

# => Passe en root
if (( EUID != 0 )); then
    printf '\n%s\n' "${BYellow}Le script doit être exécuté en «root»."
    printf '%s\n' "Entrer le mot de passe de «root»${Reset}"
    exec su -c "${0} ${1}"
    exit ${?}
fi

# Titre
msg_titre "+------------------------------------------------------------+"
msg_titre "|                                                            |"
msg_titre "|                   MISE À JOUR DE PACMAN                    |"
msg_titre "|         Configuration du fichier /etc/makepkg.conf         |"
msg_titre "|         Configuration du fichier /etc/pacman.conf          |"
msg_titre "|                                                            |"
msg_titre "+------------------------------------------------------------+"


# DANS VIRTUALBOX OU NON
check_is_in_virtualbox

# Variable de retour : init à 9
retour=9

# La date du jour
LADATE=$(date +%Y-%m-%d)

# Répertoire de travail
DIR_WORK="${DIR_CONF}"

## POUR TEST
# msg_newline
# echo "POUR TEST : DIR_WORK = "${DIR_WORK}
##

cd "${DIR_WORK}"

## POUR TEST
# # rm -f ${NAME_MAKEPKG}
# # rm -f ${NAME_PACMAN}
# cp -v ${NAME_MAKEPKG_PACNEW}.original ${NAME_MAKEPKG_PACNEW}
# cp -v ${NAME_PACMAN_PACNEW}.original ${NAME_PACMAN_PACNEW}
# read_input_text "Appuyer sur une touche pour continuer"
## POUR TEST
# # POUR TEST
# msg_newline
# echo "POUR TEST : IN_VIRTUAL_BOX = "${IN_VIRTUAL_BOX}
# #
# # POUR TEST
# msg_newline
# echo "POUR TEST : NAME_USER = "${NAME_USER}
# #


# MODIFS DE MAKEPKG.CONF
# ========================
if [[ -f "${NAME_MAKEPKG_PACNEW}" ]]; then
    # 1) MODIFS SUR FICHIERS TEMPS
    cp ${NAME_MAKEPKG_PACNEW} /tmp/${NAME_MAKEPKG}
    # Modifs -march
    if (( $IN_VIRTUAL_BOX == 0 )); then
        sed -i "s/-march=x86-64 -mtune=generic/-march=native/g" /tmp/${NAME_MAKEPKG}
    fi
    # Ajout de  -fdiagnostics-color=always
    sed -i "s/-O2 -pipe/-O2 -pipe -fdiagnostics-color=always/g" /tmp/${NAME_MAKEPKG}
    # lscpu  ==> nbre de processeurs : 5 = Nb Core + 1
    nb_core=$(LC_ALL=C lscpu | grep "^Core" | awk '{print $4}')
    nb_core_mf=$(( $nb_core + 1 ))
    sed -i "/^#MAKEFLAGS/c\MAKEFLAGS=\"-j$nb_core_mf\"" /tmp/${NAME_MAKEPKG}
    # PACKAGER
    sed -i "/^#PACKAGER/c\PACKAGER=\"Jean-Noel Dot <jean.noel.dot@sfr.fr>\"" /tmp/${NAME_MAKEPKG}

    msg_newline
    msg "Ces modifications seront apportées à «${NAME_MAKEPKG}» :"
    sed '/#/d;/^$/d' /tmp/${NAME_MAKEPKG}

    msg_newline

    # 2) FAIT MODIFS SI REPONSE = o ou O
    read_input_text "Confirmer les modifications apportées à «${NAME_MAKEPKG}»"
        case "$OPTION" in
          "o")
            # Suppressions anciens fichiers backup
            msg_newline
            msg "Suppression des anciens fichiers .backup existants."
            rm -v -f ${NAME_MAKEPKG}.backup.*
            # Sauvegarde fichiers
            msg_newline
            msg "Sauvegarde des fichiers existants."
            cp -v ${NAME_MAKEPKG} ${NAME_MAKEPKG}.backup.${LADATE}
            # Modification fichier
            msg_newline
            msg "Modification de «${NAME_MAKEPKG}»."
            mv -v /tmp/${NAME_MAKEPKG} ${NAME_MAKEPKG}
            # Vérifications
            msg_newline
            msg "Vérification de «${NAME_MAKEPKG}» :"
            sed '/#/d;/^$/d' ${NAME_MAKEPKG}
            # Supprime le fichier .pacnew
            msg_newline
            msg "Suppression du fichier «${NAME_MAKEPKG_PACNEW}»."
            rm -v -f "${NAME_MAKEPKG_PACNEW}"
            # FIN OK
            msg_newline
            msg "Modifications de «${NAME_MAKEPKG}» terminées."
            retour=0
            ;;
          *)
            # Réponse = N/n
            # 3) SUPPRIME FICHIERS TEMPS
            rm -f /tmp/${NAME_MAKEPKG}
            msg_newline
            msg "Modifications non apportées à «${NAME_MAKEPKG}»."
            retour=1
            ;;
      esac
else
      msg_newline
      msg "Aucun fichier «${NAME_MAKEPKG_PACNEW}». Aucune modification à apporter."
      retour=11
fi

msg_newline
msg_2 "--------------------------------------------------------------"
msg_newline

# MODIFS DE PACMAN.CONF
# =====================
if [[ -f "${NAME_PACMAN_PACNEW}" ]]; then
    # 1) MODIFS SUR FICHIERS TEMPS
    cp ${NAME_PACMAN_PACNEW} /tmp/${NAME_PACMAN}
    #ADD COLOR TO PACMAN.CONF
    sed -i "/^#Color/c\Color" /tmp/${NAME_PACMAN}
    #ADD VerbosePkgLists TO PACMAN.CONF
    sed -i "/^#VerbosePkgLists/c\VerbosePkgLists" /tmp/${NAME_PACMAN}
    if (( $IN_VIRTUAL_BOX == 0 )); then
        # ENABLE REPO-CK REPOSITORY
        sed -i "/^\[core\]/i\[repo-ck]\nServer = http://repo-ck.com/\$arch\nServer = http://repo-ck.com/\$arch\nServer = http://repo-ck.com/\$arch\nServer = http://repo-ck.com/\$arch\nServer = http://repo-ck.com/\$arch\n" /tmp/${NAME_PACMAN}
    fi
    # ENABLE MULTILIB REPOSITORY
    ligne_multilib=$(grep -n "\[multilib\]" /tmp/${NAME_PACMAN} | cut -f1 -d:)
    sed -i "${ligne_multilib}s/^#//" /tmp/${NAME_PACMAN}
    ligne_multilib=$(( $ligne_multilib + 1 ))
    sed -i "${ligne_multilib}s/^#//" /tmp/${NAME_PACMAN}
    if (( $IN_VIRTUAL_BOX == 0 )); then
        # ENABLE REPOLOCAL REPOSITORY
        printf '%s\n' "" >> /tmp/${NAME_PACMAN}
        printf '%s\n' "[repolocal]" >> /tmp/${NAME_PACMAN}
        printf '%s\n' "SigLevel = Optional TrustAll" >> /tmp/${NAME_PACMAN}
        printf '%s\n' "Server = file:///home/${NAME_USER}/${NAME_DIR_REPOLOCAL}" >> /tmp/${NAME_PACMAN}
    fi
    # ENABLE archlinuxf REPOSITORY
    printf '%s\n' "" >> /tmp/${NAME_PACMAN}
    printf '%s\n' "[archlinuxfr]" >> /tmp/${NAME_PACMAN}
    printf '%s\n' "SigLevel = Never" >> /tmp/${NAME_PACMAN}
    printf '%s\n' "Server = http://repo.archlinux.fr/\$arch" >> /tmp/${NAME_PACMAN}
    # ENABLE Xyne REPOSITORY : http://xyne.archlinux.ca/projects/
    printf '%s\n' "" >> /tmp/${NAME_PACMAN}
    printf '%s\n' "[xyne-x86_64]" >> /tmp/${NAME_PACMAN}
    printf '%s\n' "SigLevel = Required" >> /tmp/${NAME_PACMAN}
    printf '%s\n' "Server = http://xyne.archlinux.ca/repos/xyne" >> /tmp/${NAME_PACMAN}

    msg_newline
    msg "Ces modifications seront apportées à «${NAME_PACMAN}» :"
    sed '/#/d;/^$/d' /tmp/${NAME_PACMAN}

    msg_newline

    # 2) FAIT MODIFS SI REPONSE = o ou O
    read_input_text "Confirmer les modifications apportées à «${NAME_PACMAN}»"
        case "$OPTION" in
          "o")
            # Suppressions anciens fichiers backup
            msg_newline
            msg "Suppression des anciens fichiers .backup existants."
            rm -v -f ${NAME_PACMAN}.backup.*
            # Sauvegarde fichiers
            msg_newline
            msg "Sauvegarde des fichiers existants."
            cp -v ${NAME_PACMAN} ${NAME_PACMAN}.backup.${LADATE}
            # Modification fichier
            msg_newline
            msg "Modification de «${NAME_PACMAN}»."
            mv -v /tmp/${NAME_PACMAN} ${NAME_PACMAN}
            # Vérifications
            msg_newline
            msg "Vérification de «${NAME_PACMAN}» :"
            sed '/#/d;/^$/d' ${NAME_PACMAN}
            # Supprime le fichier .pacnew
            msg_newline
            msg "Suppression du fichier «${NAME_PACMAN_PACNEW}»."
            rm -v -f "${NAME_PACMAN_PACNEW}"
            # FIN OK
            msg_newline
            msg "Modifications de «${NAME_PACMAN}» terminées."
            retour=0
            ;;
          *)
            # Réponse = N/n
            # 3) SUPPRIME FICHIERS TEMPS
            rm -f /tmp/${NAME_PACMAN}
            msg_newline
            msg "Modifications non apportées à «${NAME_PACMAN}»."
            retour=2
            ;;
      esac
else
      msg_newline
      msg "Aucun fichier «${NAME_PACMAN_PACNEW}». Aucune modification à apporter."
      retour=22
fi


## POUR TEST
#set +x

cd
# ) FIN
exit $retour
