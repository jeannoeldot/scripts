#!/bin/bash
#
# Author: Jean-Noel Dot  <prenom nom @ fournisseur.fr> 2014
#
# Version 0.1
#

## POUR TEST
#set -x

# VARIABLES
IN_VIRTUAL_BOX=0
IS_REDIND_UPDATE_ACTIVE=1


NAME_REP_DEST_BOOT_MGR=""
NAME_DEST_BOOT_MGR=""

#
NAME_REP_INSTALLATION_PKG_REFIND="/usr/share/refind"
NAME_INSTALLATION_PKG_REFIND="refind_x64.efi"
NAME_CONF_INSTALLATION_PKG_REFIND="refind.conf-sample"
NAME_CONF_DEST_BOOT_MGR="refind.conf"
NAME_REP_ICONS_PKG_REFIND="icons"
NAME_REP_MY_ARCH_ICONS="/home/jnd/01-scripts/Maj-refind/icones-arch"
#


# COLORS
# Regular Colors
Normal='\e[0m'          # Normal
Black='\e[0;30m'        # Black
Blue='\e[0;34m'         # Blue
Cyan='\e[0;36m'         # Cyan
Green='\e[0;32m'        # Green
Purple='\e[0;35m'       # Purple
Red='\e[0;31m'          # Red
White='\e[0;37m'        # White
Yellow='\e[0;33m'       # Yellow
# Bold
BBlack='\e[1;30m'       # Black
BBlue='\e[1;34m'        # Blue
BCyan='\e[1;36m'        # Cyan
BGreen='\e[1;32m'       # Green
BPurple='\e[1;35m'      # Purple
BRed='\e[1;31m'         # Red
BWhite='\e[1;37m'       # White
BYellow='\e[1;33m'      # Yellow

#
# FONCTIONS
#
msg() {
  local mesg=$1; shift
  printf "${BWhite}:: ${mesg}${Normal}\n" "$@" >&2
}

msg_info() {
  local mesg=$1; shift
  printf "${BWhite}==> ${mesg}${Normal}\n" "$@" >&2
}

msg_titre() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Normal}\n" "$@" >&2
}

error() {
  local mesg=$1; shift
  printf "${BRed}==> ERREUR:${BWhite} ${mesg}${Normal}\n" "$@" >&2
}

cleanup() {
  cd
  [[ $1 ]] && exit $1
}

die() {
  error "$*"
  cleanup 1
}

# DANS VIRTUALBOX OU NON {{{
check_is_in_virtualbox() { #{{{
    local vbox=`journalctl -b | grep -E "DMI:"`
    echo ${vbox} | tr "[:upper:]" "[:lower:]" | grep -q virtualbox
    if [[ $? -eq 0 ]]; then
        IN_VIRTUAL_BOX=1
    else
        IN_VIRTUAL_BOX=0
    fi
} #}}}

check_and_return_name_partition_esp() {
    local esp=(`fdisk -l | awk '/EFI System/ {print $1}'`)
    if [[ "${esp}" != "" ]];then
        IS_NAME_ESP_EXISTE=1
        NAME_PARTITION_ESP=${esp}
#        echo "une partition ESP existe et est : "${NAME_PARTITION_ESP}
    else
        IS_NAME_ESP_EXISTE=0
#        echo "PAS de partition ESP !"
    fi
}
check_if_refind_update_active() {
    local status=(`systemctl status refind_update.path | awk '/Active/ {print $2}'`)
    if [[ "${status}" != "inactive" ]];then
        IS_REDIND_UPDATE_ACTIVE=1
    else
        IS_REDIND_UPDATE_ACTIVE=0
    fi
}

#
# FIN FONCTIONS
#

#
# DEBUT DU SCRIPT
#

# nom du script = $0
# nombre d'argument = $#
# liste des arguments = $*
# => Passe en root
if [ ! $( id -u ) -eq 0 ]; then
    echo -e "\n${BYellow}Le script "$0" doit être exécuté en << root >>."
    echo -e "Entrer le mot de passe de << root >>${Normal}"
    exec su -c "${0} ${*}"
    exit ${?}
fi


# Titre
msg_titre "+----------------------------------------------+"
msg_titre "|    Suite à la mise à jour de refind-efi      |"
msg_titre "|    Copie du fichier refind_x64.efi           |"
msg_titre "+----------------------------------------------+"

echo -e "\n"

# POUR TEST =1 SINON =0
MISE_AU_POINT=0

# Test si dans VirtualBox
check_is_in_virtualbox
if [[ $IN_VIRTUAL_BOX -eq 1 ]]; then
    msg_info "Installation dans Oracle VM VirtualBox."
    NAME_REP_DEST_BOOT_MGR="/boot/efi/EFI/BOOT"
    NAME_DEST_BOOT_MGR="bootx64.efi"
else
    msg_info "Installation réelle."
    NAME_REP_DEST_BOOT_MGR="/boot/efi/EFI/refind"
    NAME_DEST_BOOT_MGR="refind_x64.efi"
fi
echo -e "\n"

check_if_refind_update_active
if [[ $IS_REDIND_UPDATE_ACTIVE -eq 1 ]]; then
    msg_info "Service refind_update.path actif. Arrêt du service refind_update.path."
    systemctl stop refind_update.path
    systemctl disable refind_update.path
else
    msg_info "Service refind_update.path NON actif."
fi
echo -e "\n"
echo -e "\n"


# NAME_INSTALLATION_PKG_REFIND="refind_x64.efi"
msg "Copie de ${NAME_INSTALLATION_PKG_REFIND} dans ${NAME_REP_DEST_BOOT_MGR}/${NAME_DEST_BOOT_MGR}."
if [[ MISE_AU_POINT -eq 0 ]]; then
    cp -v ${NAME_REP_INSTALLATION_PKG_REFIND}/${NAME_INSTALLATION_PKG_REFIND} ${NAME_REP_DEST_BOOT_MGR}/${NAME_DEST_BOOT_MGR}
    echo -e "\n"
else
    echo -e "\nMISE AU POINT - La commande suivante sera éxécutée :"
    echo -e "cp -v ${NAME_REP_INSTALLATION_PKG_REFIND}/${NAME_INSTALLATION_PKG_REFIND} ${NAME_REP_DEST_BOOT_MGR}/${NAME_DEST_BOOT_MGR}"
    echo -e "\n"
fi


# FIN
if [[ MISE_AU_POINT -eq 0 ]]; then
    msg "Fin de l'installation suite à la mise à jour de refind-efi"
    echo -e "\n"

# Vérifications
    msg_info "Pour vérifier le fichier ${NAME_REP_DEST_BOOT_MGR}/${NAME_CONF_DEST_BOOT_MGR}."
    msg_info "Entrer les commandes suivantes en USER :"
    msg_info "kwrite ${NAME_REP_DEST_BOOT_MGR}/${NAME_CONF_DEST_BOOT_MGR} &"
    msg_info "kwrite /usr/share/refind/refind.conf-sample &"
else
    echo -e "\nMISE AU POINT - Fin du test de l'installation suite à la mise à jour de refind-efi"
    echo -e "\n"
# Vérifications
    msg_info "Pour vérifier le fichier ${NAME_REP_DEST_BOOT_MGR}/${NAME_CONF_DEST_BOOT_MGR}."
    msg_info "Entrer la commande suivante en USER :"
    msg_info "kwrite ${NAME_REP_DEST_BOOT_MGR}/${NAME_CONF_DEST_BOOT_MGR} &"
    msg_info "kwrite /usr/share/refind/refind.conf-sample &"
fi


## POUR TEST
#set +x

cd
exit 0

#==============================================================================
# ESSAIS
#==============================================================================
