#!/usr/bin/env bash
#
# Author: Jean-Noel Dot  <prenom nom @ fournisseur.fr> 2015,2016
# Version : 03

## POUR TEST
#set -x

# COLORS
# Regular Colors
Bold=$(tput bold)
Underline=$(tput sgr 0 1)
Reset=$(tput sgr0)
# Regular Colors
Red=$(tput setaf 1)
Green=$(tput setaf 2)
Yellow=$(tput setaf 3)
Blue=$(tput setaf 4)
Purple=$(tput setaf 5)
Cyan=$(tput setaf 6)
White=$(tput setaf 7)
# Bold
BRed=${Bold}$(tput setaf 1)
BGreen=${Bold}$(tput setaf 2)
BYellow=${Bold}$(tput setaf 3)
BBlue=${Bold}$(tput setaf 4)
BPurple=${Bold}$(tput setaf 5)
BCyan=${Bold}$(tput setaf 6)
BWhite=${Bold}$(tput setaf 7)

# REPERTOIRES
DIR_SUDOERS=/etc
## POUR TEST
# DIR_SUDOERS=/home/jnd/01-scripts/Maj-sudoers
# cp -p -v /home/jnd/01-scripts/Maj-sudoers/sudoers.pacnew.original /home/jnd/01-scripts/Maj-sudoers/sudoers.pacnew
## POUR TEST

# NOMS FICHIERS
NAME_SUDOERS=sudoers
NAME_SUDOERS_PACNEW=sudoers.pacnew

# NOM UTILSATEUR
NAME_USER=${USER}

# TIMESTAMP_TIMEOUT = 20 minutes
TIMESTAMP_TIMEOUT=20

#
# FONCTIONS
#
msg() {
  local mesg=$1; shift
  printf "${BWhite}:: ${mesg}${Reset}\n" "$@" >&2
}

msg_titre() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Reset}\n" "$@" >&2
}

msg_newline() {
  local mesg=$1; shift
  printf "\n" "$@" >&2
}

error() {
  local mesg=$1; shift
  printf "${BRed}==> ERREUR:${BWhite} ${mesg}${Reset}\n" "$@" >&2
}

cleanup() {
  cd
  [[ $1 ]] && exit $1
}

die() {
  error "$*"
  cleanup 1
}

read_input_text(){
  read -p "$1 [O/N]: " OPTION
  msg_newline
  OPTION=$(echo "$OPTION" | tr '[:upper:]' '[:lower:]')
}
#
# FIN FONCTIONS
#

#
# DEBUT DU SCRIPT
#

# => Passe en root
if (( EUID != 0 )); then
  printf '\n%s\n' "${BYellow}Le script doit être exécuté en «root»."
  printf '%s\n' "Entrer le mot de passe de «root»${Reset}"
  exec su -c "${0} ${1}"
  exit ${?}
fi

# Titre
msg_titre "+--------------------------------------------------+"
msg_titre "|         Configuration du fichier sudoers         |"
msg_titre "+--------------------------------------------------+"


# Variable de retour : init à 9
retour=9

# La date du jour
LADATE=$(date +%Y-%m-%d)

# Répertoire de travail
DIR_WORK="${DIR_SUDOERS}"

## POUR TEST
# msg_newline
# echo "POUR TEST : DIR_WORK = "${DIR_WORK}
##

cd "${DIR_WORK}"

# 0) SI FICHIER SUDOERS_PACNEW EXISTE
if [[ -s ${NAME_SUDOERS_PACNEW} ]]; then

    # 1) MODIFS SUR FICHIERS TEMPS
    tmpfile=$(mktemp --suffix=-sudoers)
    cp -p ${NAME_SUDOERS_PACNEW} ${tmpfile}

    # Uncomment to allow members of group wheel to execute any command
    sed -i '/%wheel ALL=(ALL) ALL/s/^# //' ${tmpfile}
    ## Same thing without a password (not secure)
    #sed -i '/%wheel ALL=(ALL) NOPASSWD: ALL/s/^# //' ${tmpfile}

    # LE 17/11/2015 : SED Commentés car inutiles
    # Version OpenBox : init à ""
    version_ob=""
    version_ob=$(openbox --version 2> /dev/null | awk '/Openbox/ {print $2}')
    if [[ ${version_ob} != "" ]]; then
        sed -i "/^## User alias specification/i## My User alias" ${tmpfile}
        sed -i "/^## User alias specification/iUser_Alias ADMINS = ${NAME_USER}\n##" ${tmpfile}
    
        sed -i "/^## Cmnd alias specification/i## My Cmnd alias" ${tmpfile}
#         sed -i "/^## Cmnd alias specification/iCmnd_Alias SHUTDOWN_CMDS = /sbin/shutdown, /sbin/halt, /sbin/reboot, /sbin/poweroff" ${tmpfile}
#         sed -i "/^## Cmnd alias specification/iCmnd_Alias PACMAN_CMDS = /usr/bin/pacman" ${tmpfile}
        sed -i "/^## Cmnd alias specification/iCmnd_Alias HDDTEMP_CMDS = /usr/bin/hddtemp\n##" ${tmpfile}
    
        sed -i "/^## Defaults specification/i## My User specification" ${tmpfile}
#         sed -i "/^## Defaults specification/iADMINS ALL=(ALL) NOPASSWD: SHUTDOWN_CMDS" ${tmpfile}
#         sed -i "/^## Defaults specification/iADMINS ALL=(ALL) NOPASSWD: PACMAN_CMDS" ${tmpfile}
        sed -i "/^## Defaults specification/iADMINS ALL=(ALL) NOPASSWD: HDDTEMP_CMDS\n##" ${tmpfile}
    fi

    # Modification de timestamp_timeout = 20 minutes
    printf '%s\n' "\n## My Defaults timestamp_timeout = ${TIMESTAMP_TIMEOUT} minutes" >> ${tmpfile}
    printf '%s\n' "Defaults:${NAME_USER} timestamp_timeout=${TIMESTAMP_TIMEOUT}" >> ${tmpfile}

    msg_newline
    msg "Ces modifications seront apportées :"
    sed '/#/d;/^$/d' ${tmpfile}

    msg_newline

    # 2) FAIT MODIFS SI REPONSE = o ou O
    read_input_text "Confirmer les modifications apportées"
    case "$OPTION" in
        "o")
            # Suppressions anciens fichiers backup
            msg_newline
            msg "Suppression des anciens fichiers «.backup» existants."
            rm -v -f ${NAME_SUDOERS}.backup.*
#             rm -v -f ${NAME_SUDOERS_PACNEW}.backup.*
            # Sauvegarde fichiers
            msg_newline
            msg "Sauvegarde des fichiers existants."
            cp -p -v ${NAME_SUDOERS} ${NAME_SUDOERS}.backup.${LADATE}
#             cp -v ${NAME_SUDOERS_PACNEW} ${NAME_SUDOERS_PACNEW}.backup.${LADATE}
            # Modification fichier sudoers
            msg_newline
            msg "Modification de «sudoers»."
            mv -v ${tmpfile} ${NAME_SUDOERS}
            # Vérifications
            msg_newline
            msg "Vérification de «sudoers» :"
            sed '/#/d;/^$/d' ${NAME_SUDOERS}
            # Supprime le fichier sudoers.pacnew
            msg_newline
            msg "Suppression du fichier «"${NAME_SUDOERS_PACNEW}"»."
            rm -v -f "${NAME_SUDOERS_PACNEW}"
            # FIN OK
            cd
            msg_newline
            msg "Modifications terminées."
            retour=0
            ;;
        *)
            # Réponse = N/n
            # 3) SUPPRIME FICHIERS TEMPS
            rm -f ${tmpfile}
            cd
            msg_newline
            msg "Modifications non apportées."
            retour=1
            ;;
    esac
else
    error "Aucun fichier ${DIR_SUDOERS}/${NAME_SUDOERS_PACNEW}"
    retour=2
fi

## POUR TEST
#set +x

cd
# ) FIN
exit $retour
