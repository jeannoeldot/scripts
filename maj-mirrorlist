 
#!/usr/bin/env bash
#
# Author: Jean-Noel Dot  <prenom nom @ fournisseur.fr> 2013.2015
# Version : 08

## POUR TEST
#set -x

# REPERTOIRES
DIR_PACMAN_D=/etc/pacman.d
NAME_MIRROR=mirrorlist
NAME_MIRROR_PACNEW=mirrorlist.pacnew

# COLORS
# Regular Colors
Bold=$(tput bold)
Underline=$(tput sgr 0 1)
Reset=$(tput sgr0)
# Regular Colors
Red=$(tput setaf 1)
Green=$(tput setaf 2)
Yellow=$(tput setaf 3)
Blue=$(tput setaf 4)
Purple=$(tput setaf 5)
Cyan=$(tput setaf 6)
White=$(tput setaf 7)
# Bold
BRed=${Bold}$(tput setaf 1)
BGreen=${Bold}$(tput setaf 2)
BYellow=${Bold}$(tput setaf 3)
BBlue=${Bold}$(tput setaf 4)
BPurple=${Bold}$(tput setaf 5)
BCyan=${Bold}$(tput setaf 6)
BWhite=${Bold}$(tput setaf 7)

#
# FONCTIONS
#
msg() {
  local mesg=$1; shift
  printf "${BWhite}:: ${mesg}${Reset}\n" "$@" >&2
}

msg_titre() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Reset}\n" "$@" >&2
}

msg_newline() {
  local mesg=$1; shift
  printf "\n" "$@" >&2
}

error() {
  local mesg=$1; shift
  printf "${BRed}==> ERREUR:${BWhite} ${mesg}${Reset}\n" "$@" >&2
}

cleanup() {
  cd
  [[ $1 ]] && exit $1
}

die() {
  error "$*"
  cleanup 1
}

read_input_text(){
  read -p "$1 [O/N]: " OPTION
  msg_newline
  OPTION=$(echo "$OPTION" | tr '[:upper:]' '[:lower:]')
}
#
# FIN FONCTIONS
#

#
# DEBUT DU SCRIPT
#

# => Passe en root
if (( EUID != 0 )); then
  printf '\n%s\n' "${BYellow}Le script doit être exécuté en «root»."
  printf '%s\n' "Entrer le mot de passe de «root»${Reset}"
  exec su -c "${0} ${1}"
  exit ${?}
fi

# Titre
msg_titre "+--------------------------------------------------+"
msg_titre "|          Création du fichier mirrorlist          |"
msg_titre "|                 à partir de l'url                |"
msg_titre "| https://www.archlinux.org/mirrorlist/?country=FR |"
msg_titre "+--------------------------------------------------+"


# Variable de retour : init à 9
retour=9

# La date du jour
LADATE=$(date +%Y-%m-%d)

# Répertoire de travail
DIR_WORK="${DIR_PACMAN_D}"

cd "${DIR_WORK}"


# Suppressions anciens fichiers
msg_newline
msg "Suppression des anciens fichiers .backup existants."
rm -v -f ${NAME_MIRROR}.backup.*
rm -v -f ${NAME_MIRROR_PACNEW}.backup.*


# Sauvegarde fichiers
msg_newline
msg "Sauvegarde des fichiers existants."
cp -v ${NAME_MIRROR} ${NAME_MIRROR}.backup.${LADATE}
cp -v ${NAME_MIRROR_PACNEW} ${NAME_MIRROR_PACNEW}.backup.${LADATE}

# Configure le fichier /etc/pacman.d/mirrorlist.
url="https://www.archlinux.org/mirrorlist/?country=FR&use_mirror_status=on"
tmpfile=$(mktemp --suffix=-mirrorlist)
# Get latest mirror list and save to tmpfile
curl -so ${tmpfile} ${url}

# Backup and replace current mirrorlist file (if new file is non-zero)
if [[ -s ${tmpfile} ]]; then
  date_Generated=$(awk '/Generated/ {print $4}' "${tmpfile}")
  if [[ ${date_Generated} == ${LADATE} ]]; then
    sed -i "s/^#Server/Server/g" ${tmpfile}

    # Visualisation des mirroirs qui seront utilisés.
    msg_newline
    msg "Visualisation des mirroirs qui seront utilisés..."
    cat "${tmpfile}"

    # ICI : confirmer si mirroirs OK
    read_input_text "Confirmer la sélection des mirroirs"
    case "$OPTION" in
      "o")
          sed -i "/^## Score/d" ${tmpfile}
    
          msg_newline
          msg "Configuration du fichier mirrorlist..."
          mv -i ${tmpfile} ${NAME_MIRROR}
          chmod +r ${NAME_MIRROR}
    
          # Visualisation du nouveau fichier mirrorlist.
          msg_newline
          msg "Pour visualiser le nouveau fichier "${NAME_MIRROR}" avec nano, appuyer sur une touche."
          read
          nano "${NAME_MIRROR}"
    
          # OK
          retour=0
          ;;
      *)
          # Réponse = N/n
          retour=1
          ;;
    esac
  else
    # PAS OK : date_Generated != LADATE du jour
    retour=1
  fi
else
  # PAS OK : new file is zero
  retour=1
fi

# Fin ou Erreur
if (( retour == 0 )); then
  # Supprime le fichier mirrorlist.pacnew
  msg_newline
  msg "Suppression du fichier "${NAME_MIRROR_PACNEW}"."
  rm -v -f "${NAME_MIRROR_PACNEW}"
  msg_newline
  msg "Fin de la configuration du fichier mirrorlist."
  # Affiche message pour synchroniser les nouveaux mirroirs et mettre à jour.
  msg_newline
  msg "Lancer la commande suivante ${BYellow}pacman -Syu${Reset} pour synchroniser les nouveaux mirroirs et mettre à jour Arch..."
#  pacman -Syu
else
  msg_newline
  msg "Échec de la configuration du fichier mirrorlist... Éditer manuellement le fichier « /etc/pacman.d/mirrorlist »."
fi


## POUR TEST
#set +x

cd
exit 0

