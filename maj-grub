#!/usr/bin/env bash
#
# Author: Jean-Noel Dot  <prenom nom @ fournisseur.fr> 2024, 2025
#
# Version 0.1
#

## POUR TEST
#set -x

# VARIABLES
# NOM UTILSATEUR
NAME_USER=${USER}

IN_VIRTUAL_BOX=0

# NOMS FICHIERS REELS
NAME_DEFAULT_GRUB=grub
NAME_DEFAULT_GRUB_PACNEW=grub.pacnew
NAME_40_CUSTOM=40_custom
NAME_40_CUSTOM_PACNEW=40_custom.pacnew
# REPERTOIRES
DIR_CONF_DEFAULT_GRUB=/etc/default
DIR_CONF_40_CUSTOM=/etc/grub.d

# COULEURS
Bold=$(tput bold)
Underline=$(tput sgr 0 1)
Reset=$(tput sgr0)
# Regular Colors
Red=$(tput setaf 1)
Green=$(tput setaf 2)
Yellow=$(tput setaf 3)
Blue=$(tput setaf 4)
Purple=$(tput setaf 5)
Cyan=$(tput setaf 6)
White=$(tput setaf 7)
# Bold
BRed=${Bold}$(tput setaf 1)
BGreen=${Bold}$(tput setaf 2)
BYellow=${Bold}$(tput setaf 3)
BBlue=${Bold}$(tput setaf 4)
BPurple=${Bold}$(tput setaf 5)
BCyan=${Bold}$(tput setaf 6)
BWhite=${Bold}$(tput setaf 7)

#
# FONCTIONS
#
msg() {
  local mesg=$1; shift
  printf "${BWhite}:: ${mesg}${Reset}\n" "$@" >&2
}

msg_2() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Reset}\n" "$@" >&2
}

msg_info() {
  local mesg=$1; shift
  printf "${BWhite}==> ${mesg}${Reset}\n" "$@" >&2
}

msg_titre() {
  local mesg=$1; shift
  printf "${BWhite}${mesg}${Reset}\n" "$@" >&2
}

msg_newline() {
    local mesg=$1; shift
    printf "\n" "$@" >&2
}

error() {
  local mesg=$1; shift
  printf "${BRed}==> ERREUR:${BWhite} ${mesg}${Reset}\n" "$@" >&2
}

cleanup() {
  cd
  [[ $1 ]] && exit $1
}

die() {
  error "$*"
  cleanup 1
}

read_input_text() {
  printf '%s' "${BGreen}"
  read -p "$1 [O/N]: " OPTION
  msg_newline
  OPTION=$(echo "$OPTION" | tr '[:upper:]' '[:lower:]')
  printf '%s\n' "${Reset}"
}

# DANS VIRTUALBOX OU NON
# OUI ==> IN_VIRTUAL_BOX=1
# NON ==> IN_VIRTUAL_BOX=0
check_is_in_virtualbox() {
    local vbox=$(journalctl -b | grep -E "DMI:")
    echo ${vbox} | tr "[:upper:]" "[:lower:]" | grep -q virtualbox
    if (( $? == 0 )); then
        IN_VIRTUAL_BOX=1
    else
        IN_VIRTUAL_BOX=0
    fi
}

check_and_return_name_partition_esp() {
    local esp=$(LC_ALL=C fdisk -l | awk '/EFI System/ {print $1}')
    if [[ "${esp}" != "" ]];then
        IS_NAME_ESP_EXISTE=1
        NAME_PARTITION_ESP=${esp}
#        echo "une partition ESP existe et est : "${NAME_PARTITION_ESP}
    else
        IS_NAME_ESP_EXISTE=0
#        echo "PAS de partition ESP !"
    fi
}

#
# FIN FONCTIONS
#

#
# DEBUT DU SCRIPT
#

# nom du script = $0
# nombre d'argument = $#
# liste des arguments = $*
# => Passe en root
if (( EUID != 0 )); then
    printf '\n%s\n' "${BYellow}Le script $0 doit être exécuté en «root»."
    printf '%s\n' "Entrer le mot de passe de «root»${Reset}"
    exec su -c "${0} ${1}"
    exit ${?}
fi


# Titre
msg_titre "+----------------------------------------------------+"
msg_titre "|    Suite à la mise à jour de grub                  |"
msg_titre "|    Modification du fichier /etc/default/grub       |"
msg_titre "|    Modification du fichier /etc/grub.d/40_custom   |"
msg_titre "|    Génération du fichier /boot/grub/grub.cfg       |"
msg_titre "+----------------------------------------------------+"

msg_newline

# POUR TEST =1 SINON =0
MISE_AU_POINT=0
#set -x

# Test si dans VirtualBox
check_is_in_virtualbox
if (( $IN_VIRTUAL_BOX == 1 )); then
    msg_info "Installation dans Oracle VM VirtualBox."
    msg_info "Ajout option force_addr=0xaddr."
    msg_info "Ajout option --removable."
else
    msg_info "Installation réelle."
fi
msg_newline

# Répertoire de travail /etc/default/
cd "${DIR_CONF_DEFAULT_GRUB}"

# MODIFS /etc/default/grub
# ========================
if [[ -f "${NAME_DEFAULT_GRUB_PACNEW}" ]]; then
    # 1) MODIFS SUR FICHIERS TEMPS
    cp ${NAME_DEFAULT_GRUB_PACNEW} /tmp/${NAME_DEFAULT_GRUB}
    sed -i "/^GRUB_DEFAULT=/c\GRUB_DEFAULT=saved" /tmp/${NAME_DEFAULT_GRUB}
    sed -i "/^GRUB_TIMEOUT=/c\GRUB_TIMEOUT=3" /tmp/${NAME_DEFAULT_GRUB}
    if (( $IN_VIRTUAL_BOX == 1 )); then
        sed -i "/^GRUB_CMDLINE_LINUX=/c\GRUB_CMDLINE_LINUX=\"rw force_addr=0xaddr systemd.unit=graphical.target quiet\"" /tmp/${NAME_DEFAULT_GRUB}
        sed -i "/^GRUB_CMDLINE_LINUX_DEFAULT=/c\GRUB_CMDLINE_LINUX_DEFAULT=\"\"" /tmp/${NAME_DEFAULT_GRUB}
    else
        sed -i "/^GRUB_CMDLINE_LINUX=/c\GRUB_CMDLINE_LINUX=\"rw systemd.unit=graphical.target quiet\"" /tmp/${NAME_DEFAULT_GRUB}
# Inutile depuis Nvidia driver 575.57.08
#        sed -i "/^GRUB_CMDLINE_LINUX_DEFAULT=/c\GRUB_CMDLINE_LINUX_DEFAULT=\"nvidia.NVreg_PreserveVideoMemoryAllocations=0\"" /tmp/${NAME_DEFAULT_GRUB}
        sed -i "/^GRUB_CMDLINE_LINUX_DEFAULT=/c\GRUB_CMDLINE_LINUX_DEFAULT=\"\"" /tmp/${NAME_DEFAULT_GRUB}
    fi
    sed -i "/#GRUB_SAVEDEFAULT/s/^#//" /tmp/${NAME_DEFAULT_GRUB}
    sed -i "/#GRUB_DISABLE_SUBMENU/s/^#//" /tmp/${NAME_DEFAULT_GRUB}
    sed -i "/#GRUB_DISABLE_OS_PROBER/s/^#//" /tmp/${NAME_DEFAULT_GRUB}
    # Theme si existe
    contenu_grub_gfxmode=$(sed -n "/^GRUB_GFXMODE=/p" /tmp/${NAME_DEFAULT_GRUB})
    # Commente la ligne GRUB_GFXMODE= originale
    sed -i "/^GRUB_GFXMODE=/i\#${contenu_grub_gfxmode}" /tmp/${NAME_DEFAULT_GRUB}
    # Inscrit modifs
    eval $(grep '^GRUB_GFXMODE=' "${NAME_DEFAULT_GRUB}")
    GRUB_GFXMODE_DEFAULT="${GRUB_GFXMODE}"
    sed -i "/^GRUB_GFXMODE=/c\GRUB_GFXMODE=\""${GRUB_GFXMODE_DEFAULT}"\"" /tmp/${NAME_DEFAULT_GRUB}
    eval $(grep '^GRUB_THEME=' "${NAME_DEFAULT_GRUB}")
    GRUB_THEME_DEFAULT="${GRUB_THEME}"
    sed -i "/^#GRUB_THEME=/c\GRUB_THEME=\""${GRUB_THEME_DEFAULT}"\"" /tmp/${NAME_DEFAULT_GRUB}
    #
    msg_newline
    # 2) FAIT MODIFS SI REPONSE = o ou O
    read_input_text "Confirmer les modifications du fichier «"${DIR_CONF_DEFAULT_GRUB}"/${NAME_DEFAULT_GRUB}»"
        case "$OPTION" in
          "o")
            # Modification fichier
            msg "Modification de «"${DIR_CONF_DEFAULT_GRUB}"/${NAME_DEFAULT_GRUB}»."
            mv -v /tmp/${NAME_DEFAULT_GRUB} ${NAME_DEFAULT_GRUB}
            # Supprime le fichier .pacnew
            msg_newline
            msg "Suppression du fichier «"${DIR_CONF_DEFAULT_GRUB}"/${NAME_DEFAULT_GRUB_PACNEW}»."
            rm -v -f "${NAME_DEFAULT_GRUB_PACNEW}"
            # FIN OK
            msg_newline
            msg "Modifications de «"${DIR_CONF_DEFAULT_GRUB}"/${NAME_DEFAULT_GRUB}» terminées."
            retour=0
            ;;
          *)
            # Réponse = N/n
            # 3) SUPPRIME FICHIERS TEMPS
            rm -f /tmp/${NAME_DEFAULT_GRUB}
            msg_newline
            msg "Modifications non apportées à «"${DIR_CONF_DEFAULT_GRUB}"/${NAME_DEFAULT_GRUB}»."
            retour=2
            ;;
      esac
else
      msg_newline
      msg "Aucun fichier «"${DIR_CONF_DEFAULT_GRUB}"/${NAME_DEFAULT_GRUB_PACNEW}». Aucune modification à apporter."
      retour=22
fi

msg_newline
msg_2 "----------------------------------------------------------------------------"
msg_newline

# Répertoire de travail /etc/grub.d/40_custom
cd "${DIR_CONF_40_CUSTOM}"

# MODIFS /etc/grub.d/40_custom
# ============================
if [[ -f "${NAME_40_CUSTOM_PACNEW}" ]]; then
    # 1) MODIFS SUR FICHIERS TEMPS
    cp ${NAME_40_CUSTOM_PACNEW} /tmp/${NAME_40_CUSTOM}
    # "Restart" menu entry
    printf '%s\n' "menuentry 'System restart' --class restart {" >> /tmp/${NAME_40_CUSTOM}
    printf '%s\n' "   echo 'System rebooting...'" >> /tmp/${NAME_40_CUSTOM}
    printf '%s\n' '   reboot' >> /tmp/${NAME_40_CUSTOM}
    printf '%s\n' '}' >> /tmp/${NAME_40_CUSTOM}
    # "Shutdown" menu entry
    printf '%s\n' "menuentry 'System shutdown' --class shutdown {" >> /tmp/${NAME_40_CUSTOM}
    printf '%s\n' "   echo 'System shutting down...'" >> /tmp/${NAME_40_CUSTOM}
    printf '%s\n' '   halt' >> /tmp/${NAME_40_CUSTOM}
    printf '%s\n' '}' >> /tmp/${NAME_40_CUSTOM}
    #
    msg_newline
    # 2) FAIT MODIFS SI REPONSE = o ou O
    read_input_text "Confirmer les modifications du fichier «"${DIR_CONF_40_CUSTOM}"/${NAME_40_CUSTOM}»"
        case "$OPTION" in
          "o")
            # Modification fichier
            msg "Modification de «"${DIR_CONF_40_CUSTOM}"/${NAME_40_CUSTOM}»."
            mv -v /tmp/${NAME_40_CUSTOM} ${NAME_40_CUSTOM}
            # Supprime le fichier .pacnew
            msg_newline
            msg "Suppression du fichier «"${DIR_CONF_40_CUSTOM}"/${NAME_40_CUSTOM_PACNEW}»."
            rm -v -f "${NAME_40_CUSTOM_PACNEW}"
            # FIN OK
            msg_newline
            msg "Modifications de «"${DIR_CONF_40_CUSTOM}"/${NAME_40_CUSTOM}» terminées."
            retour=0
            ;;
          *)
            # Réponse = N/n
            # 3) SUPPRIME FICHIERS TEMPS
            rm -f /tmp/${NAME_40_CUSTOM}
            msg_newline
            msg "Modifications non apportées à «"${DIR_CONF_40_CUSTOM}"/${NAME_40_CUSTOM}»."
            retour=2
            ;;
      esac
else
      msg_newline
      msg "Aucun fichier «"${DIR_CONF_40_CUSTOM}"/${NAME_40_CUSTOM_PACNEW}». Aucune modification à apporter."
      retour=22
fi

msg_newline
msg_2 "---------------------------------------------------------------------------------"
msg_newline

# A FAIRE SI $retour != 22 : SI PAS PACNEW = PAS INSTALL GRUB
if (( retour != 22 )); then
        msg "Installation de GRUB dans /efi..."
        # Installation de GRUB
        if (( $IN_VIRTUAL_BOX == 1 )); then
            grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB_ARCH --removable
        else
            grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB_ARCH
        fi
        msg "Génération du fichier /boot/grub/grub.cfg..."
        # Configuration et Génération du fichier /boot/grub/grub.cfg
        LC_ALL=C grub-mkconfig -o /boot/grub/grub.cfg
else
    error "PAS Installation ni Génération de GRUB..."
fi

# FIN


## POUR TEST
#set +x

cd
exit $retour

#==============================================================================
# ESSAIS
#==============================================================================

# ## POUR TEST
# # REPERTOIRES
# DIR_CONF_DEFAULT_GRUB="$HOME/01-scripts/Maj-grub/0-Tests/"
# DIR_CONF_40_CUSTOM="$HOME/01-scripts/Maj-grub/0-Tests/"
# ## POUR TEST
# ##
#
## POUR TEST
# PASSAGE EN ROOT COMMENTÉ
## POUR TEST


# ## POUR TEST
# cat /tmp/${NAME_DEFAULT_GRUB}
# ## POUR TEST
#
# ## POUR TEST
# cat /tmp/${NAME_40_CUSTOM}
# ## POUR TEST

# ## POUR TEST
# if (( retour == 0 )); then
#     echo "retour = "$retour
#     msg "Installation de GRUB dans /efi..."
#     msg "Génération du fichier /boot/grub/grub.cfg..."
# else
#     echo "retour = "$retour
#     msg "PAS Installation ni Génération de GRUB..."
# fi
#
## POUR TEST
# if (( retour != 22 )); then
#     echo "retour = "$retour
#     msg "Installation de GRUB dans /efi..."
#     msg "Génération du fichier /boot/grub/grub.cfg..."
# else
#     echo "retour = "$retour
#     error "PAS Installation ni Génération de GRUB..."
# fi
## POUR TEST
# !!!!!!!!
# !!!!!!!!

    # #GRUB_GFXMODE="auto"
    # GRUB_GFXMODE="1280x1024"
    # #GRUB_THEME="/path/to/gfxtheme"
    # GRUB_THEME="/usr/share/grub/themes/grub-theme-dark-gray/theme.txt"

    #            eval $(grep '^TYPE_KEYBOARD=' "/root/variables.ali")
    #            TYPE_KEYBOARD="${TYPE_KEYBOARD}"

    # eval $(grep '^GRUB_GFXMODE=' "/etc/default/grub")
    # GRUB_GFXMODE_DEFAULT="${GRUB_GFXMODE}"
    # echo "GRUB_GFXMODE_DEFAULT=" "${GRUB_GFXMODE_DEFAULT}"
    # ==> GRUB_GFXMODE_DEFAULT= 1280x1024     <---------------ATTENTION AUX ""
    # eval $(grep '^GRUB_THEME=' "/etc/default/grub")
    # GRUB_THEME_DEFAULT="${GRUB_THEME}"
    # echo "GRUB_THEME_DEFAULT=" "${GRUB_THEME_DEFAULT}"
    # ==> GRUB_THEME_DEFAULT= /usr/share/grub/themes/grub-theme-dark-gray/theme.txt     <---------------ATTENTION AUX ""

# :: Aucun fichier «/etc/default/grub.pacnew». Aucune modification à apporter.
#
# ----------------------------------------------------------------------------
#
#
# :: Aucun fichier «//etc/grub.d/40_custom.pacnew». Aucune modification à apporter.
#
# ---------------------------------------------------------------------------------

