#!/usr/bin/env bash
#
# Author: Jean-Noel Dot  <prenom nom @ fournisseur.fr> 2014,2015,2016,2017,2020,2023
#
# Name : script2git
#
# Version : 0.1.6
#
# AVEC 1 paramètres : script2git -m "motifs du commit"
# Example : $ script2git -m "Modifs COULEURS. echo ==> printf. Revu test if"
# Example : $ script2git -m "Modifs COULEURS. echo ==> printf. Revu if, PATH, ls et find"
# ou
# SANS paramètre : script2git
# Example : $ script2git
# Par défaut : motifs = "Mises à jour"
#

################################
## POUR TEST
#set -x
################################

# COULEURS
Bold=$(tput bold)
Underline=$(tput sgr 0 1)
Reset=$(tput sgr0)
# Regular Colors
Red=$(tput setaf 1)
Green=$(tput setaf 2)
Yellow=$(tput setaf 3)
Blue=$(tput setaf 4)
Purple=$(tput setaf 5)
Cyan=$(tput setaf 6)
White=$(tput setaf 7)
# Bold
BRed=${Bold}$(tput setaf 1)
BGreen=${Bold}$(tput setaf 2)
BYellow=${Bold}$(tput setaf 3)
BBlue=${Bold}$(tput setaf 4)
BPurple=${Bold}$(tput setaf 5)
BCyan=${Bold}$(tput setaf 6)
BWhite=${Bold}$(tput setaf 7)


# FONCTIONS
msg_titre() {
    local mesg=$1; shift
    printf "${Bold}${mesg}${Reset}\n" "$@" >&2
}

msg() {
    local mesg=$1; shift
    printf "${Bold}:: ${mesg}${Reset}\n" "$@" >&2
}

msg_green() {
    local mesg=$1; shift
    printf "${BGreen}:: ${mesg}${Reset}\n" "$@" >&2
}

msg_newline() {
    local mesg=$1; shift
    printf "\n" "$@" >&2
}

error() {
    local mesg=$1; shift
    printf "${BRed}==> ERREUR:${Reset}${Bold} ${mesg}${Reset}\n" "$@" >&2
}

cleanup() {
    [[ $1 ]] && exit $1
}

die() {
    error "$*"
    cleanup 1
}

usage() {
    printf '%s\n' "Arguments :"
    printf '%s\n' "-h                 Cette aide."
    printf '%s\n' "-m <motif>         motif : Motifs du commit. Facultatif: Par défaut = \"Mises à jour\""
    cleanup 0
}


# Variables globales
DIR_SCRIPTS="$HOME/01-scripts"
DIR_GIT="$HOME/02-git/scripts"

MOTIF_PAR_DEFAUT="Mises à jour"

CONTENU_MOTIF=""


# Variables du script
# nom_script="$0"
# nombre_d_argument="$#"
# contenu_motif="$1"


# Titre
msg_titre " +--------------------------------------------+"
msg_titre " |                                            |"
msg_titre " |                 SCRIPT2GIT                 |"
msg_titre " |                                            |"
msg_titre " | Usage : script2git [-m \"motifs du commit\"] |"
msg_titre " |                                            |"
msg_titre " | script2git -h pour lire l'aide             |"
msg_titre " +--------------------------------------------+"
msg_newline


# DÉBUTS DES TESTS DES ARGUMENTS
# Variables tests arguments
arg_motif=

while getopts 'h:m:' arg; do
    case "$arg" in
        m) arg_motif="$OPTARG" ;;
        h|*) usage ;;
    esac
done

# Test si arg_motif existe. Par défaut = "Mises à jour"
if [[ "$arg_motif" != "" ]]; then
#    echo "==> Argument -m \"motifs du commit\" = "$arg_motif
    CONTENU_MOTIF="$arg_motif"
#    echo "CONTENU_MOTIF = "${CONTENU_MOTIF}
else
    CONTENU_MOTIF="${MOTIF_PAR_DEFAUT}"
#    echo "PAR DEFAUT, CONTENU_MOTIF = "${CONTENU_MOTIF}
fi

# DÉBUTS MISES À JOUR SUR GIT
# Effacement des fichiers ~ dans ${DIR_SCRIPTS}
msg_newline
msg "Effacement des fichiers « *~ » dans « ${DIR_SCRIPTS} »"
find -name *~ -exec /usr/bin/rm -vf {} \;
find ${DIR_SCRIPTS} -name *~ -exec /usr/bin/rm -vf {} \;


# Copie des scripts de ${DIR_SCRIPTS} vers ${DIR_GIT}
msg_newline
msg "Copie des scripts de « ${DIR_SCRIPTS} » vers « ${DIR_GIT} »"
# Effacement de ${DIR_GIT}/README
rm -f ${DIR_GIT}/README
# Copie des scripts
cp -vf ${DIR_SCRIPTS}/Backup/backup-kde ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Backup/backup-nosauve ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Backup/backup-ob ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Backup/backup-ssd ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Creation-PKG-Tempfs/mkpkg-tmpfs ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Creation-PKG-Tempfs/mkpkg-chroot-repo ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/init-mirrorlist-pacnew/maj-mirrorlist ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/iso2usb/iso2usb ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-Blender/blender-bf ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-Blender/untar-blender-bf ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-flashplugin/maj-flashplugin ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-flashplugin/Maj-Flashplugin.TXT ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-flashplugin/maj-flash-psd-addons ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-flashplugin/Maj-FlashPsdAddons.TXT ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-grub/maj-grub ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-pacman/maj-pacman ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-refind/maj-refind ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-refind/modif-refind-conf ${DIR_GIT}/
rm -rf ${DIR_GIT}/icones-arch
cp -R ${DIR_SCRIPTS}/Maj-refind/icones-arch ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-Repos/maj-repolocal ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-startkde/maj-startkde ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Maj-sudoers/maj-sudoers ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Modif-qt-conf/modif-qt4-conf ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/Modif-qt-conf/modif-qt5-conf ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/To-git/build2git ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/To-git/dev2git ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/To-git/script2git ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/verif-deps/verif-deps ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/clean-backups ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/dpi.py ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/find-optdeps ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/lls ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/ompload ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/rpmextract.sh ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/search.sh ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/whoneeds ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/restartaudio ${DIR_GIT}/
cp -vf ${DIR_SCRIPTS}/CPU-Capability.sh ${DIR_GIT}/

# Création nouveau ${DIR_GIT}/README
printf '%s\n' "Repository de mes scripts contenus dans ~/01-scripts." > ${DIR_GIT}/README
printf '%s\n' "=====================================================" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Backup" >> ${DIR_GIT}/README
printf '%s\n' " -> backup-kde" >> ${DIR_GIT}/README
printf '%s\n' " -> backup-ob" >> ${DIR_GIT}/README
printf '%s\n' " -> backup-ssd" >> ${DIR_GIT}/README
printf '%s\n' " -> backup-nosauve" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Creation-PKG-Tempfs" >> ${DIR_GIT}/README
printf '%s\n' " -> mkpkg-tmpfs" >> ${DIR_GIT}/README
printf '%s\n' " -> mkpkg-chroot-repo" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : init-mirrorlist-pacnew" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-mirrorlist" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : iso2usb" >> ${DIR_GIT}/README
printf '%s\n' " -> iso2usb" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-Blender" >> ${DIR_GIT}/README
printf '%s\n' " -> blender-bf" >> ${DIR_GIT}/README
printf '%s\n' " -> untar-blender-bf" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-flashplugin" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-flash-psd-addons" >> ${DIR_GIT}/README
printf '%s\n' " -> Maj-FlashPsdAddons.TXT" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-flashplugin" >> ${DIR_GIT}/README
printf '%s\n' " -> Maj-Flashplugin.TXT" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-grub" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-grub" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-pacman" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-pacman" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-refind" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-refind" >> ${DIR_GIT}/README
printf '%s\n' " -> modif-refind-conf" >> ${DIR_GIT}/README
printf '%s\n' " -> icones-arch" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-Repos" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-repolocal" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-startkde" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-startkde" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Maj-sudoers" >> ${DIR_GIT}/README
printf '%s\n' " -> maj-sudoers" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : Modif-qt-conf" >> ${DIR_GIT}/README
printf '%s\n' " -> modif-qt4-conf" >> ${DIR_GIT}/README
printf '%s\n' " -> modif-qt5-conf" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : To-git" >> ${DIR_GIT}/README
printf '%s\n' " -> build2git" >> ${DIR_GIT}/README
printf '%s\n' " -> dev2git" >> ${DIR_GIT}/README
printf '%s\n' " -> script2git" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Répertoire : verif-deps" >> ${DIR_GIT}/README
printf '%s\n' " -> verif-deps" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "" >> ${DIR_GIT}/README
printf '%s\n' "Racine :" >> ${DIR_GIT}/README
printf '%s\n' " -> clean-backups" >> ${DIR_GIT}/README
printf '%s\n' " -> CPU-Capability.sh" >> ${DIR_GIT}/README
printf '%s\n' " -> dpi.py" >> ${DIR_GIT}/README
printf '%s\n' " -> find-optdeps" >> ${DIR_GIT}/README
printf '%s\n' " -> lls" >> ${DIR_GIT}/README
printf '%s\n' " -> ompload" >> ${DIR_GIT}/README
printf '%s\n' " -> restartaudio" >> ${DIR_GIT}/README
printf '%s\n' " -> rpmextract.sh" >> ${DIR_GIT}/README
printf '%s\n' " -> search.sh" >> ${DIR_GIT}/README
printf '%s\n' " -> whoneeds" >> ${DIR_GIT}/README


# Commande git add --all
msg_newline
msg "Commande « git add --all »"
cd ${DIR_GIT}
git add --all

# Commande git commit -m "motifs du commit"
msg_newline
msg "Commande « git commit -m \"${CONTENU_MOTIF}\" »"
git commit -m "\"${CONTENU_MOTIF}\""

# Commande git push origin main"
msg_newline
msg "Commande « git push origin main »"
git push origin main



cd

################################
## POUR TEST
#set +x
################################

exit 0

#=======================================================================================
## POUR TEST

